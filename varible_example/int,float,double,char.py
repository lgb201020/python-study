'''
자료형 
추상화(Abstraction)라는것은 시스템의 핵심적인 구조, 동작에 초점을 두고 시스템을 간략하게 기술한것
-> 어떤 자료나 연산자 즉 어떤 interface가 제공되는지를 정의한 것이지 어떻게 동작하고 동작의 원리가 뭔지를 정의한 것이 아니다.

추상 자료형(ADT)
말 그대로 어떤 자료형인지를 정의하는 것
(ex: int, float, double, char, array.... )
이러한 ADT를 구현해서 사용하는 것을 DataStructure라고 한다.
'''
'''
자료형이라는 것은 값의 type -> 입력값이 정수인지 실수인지 문자인지 배열인지등을 구분할 수 있게 해줌

왜 이게 중요한가? 
컴퓨터는 사람처럼 문맥이나 내용의 담긴 의미를 이해 할 수 없기 때문이다.
'''
'''
추상화에는 뭐가 있는가?
data type
숫자(정수 실수)
문자열
불(bool):T/F를 나타냄
-------------------------------
data structure
변수
리스트(=배열(array))
튜플
딕셔너리
집합
structure
class

'''
'''
변수
수학에서의 등호와 다름
'''
'''
int a = 1
char c ="q"
== 와 !=
bool t == True 
bool f != True
'''
'''
for 변수 in 시퀀스:
    반복할 코드
'''
'''
if 조건:
 조건이 참일 때 실행할 코드
else:
 조건이 거짓일 때 실행할 코
'''

'''
while 조건:
 반복 실행할 코드
'''

num = 1
while num <= 5:
    print(num)
    



a= 10
if a<5:
    print(a)

elif a<20:
    print("a는 5보다 크고 20보다 작다.")

else:
    print("a는 5보다 큽니다.")
    
"""
변수에 대해 C++과 python의 차이점
파이썬과 C++에서의 변수는 모두 데이터를 저장하고 참조하는 데 사용되는 식별자입니다. 그러나 두 언어에서 변수를 다루는 방식은 매우 다릅니다.

파이썬에서의 변수:
파이썬은 동적 타입 언어입니다. 즉, 변수를 선언할 때 데이터 타입을 명시하지 않습니다.
한 번 선언된 변수에 다른 데이터 타입의 값을 할당할 수 있습니다.
예: x = 10 (정수), 나중에 x = "Hello" (문자열)로 변경 가능
파이썬에서 변수는 객체에 대한 참조(또는 포인터)로 간주됩니다.
C++에서의 변수:
C++은 정적 타입 언어입니다. 따라서 변수를 선언할 때마다 해당 변수의 데이터 타입을 명시해야 합니다.
한 번 선언된 후, 해당 변수에 다른 데이터 타입의 값을 할당하려 하면 컴파일 오류가 발생합니다.
예: int x = 10; (정수), 이후 x = "Hello"; 는 허용되지 않음
C++에서는 직접 메모리 관리가 가능합니다(예: 포인터 사용).
따라서, 같은 '변수'라는 용어지만 사용하는 언어에 따라 그 의미와 작동 방식이 달라집니다. 이런 차이점들은 각각의 언어가 설계된 철학과 목표, 그리고 적용 분야에 기반을 두고 있습니다.
"""